[{"/home/peeyushdangi/Desktop/expense_tracker/src/index.js":"1","/home/peeyushdangi/Desktop/expense_tracker/src/App.js":"2","/home/peeyushdangi/Desktop/expense_tracker/src/components/Details/Details.jsx":"3","/home/peeyushdangi/Desktop/expense_tracker/src/components/Details/styles.js":"4","/home/peeyushdangi/Desktop/expense_tracker/src/styles.js":"5","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Main.jsx":"6","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/styles.js":"7","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Form/Form.jsx":"8","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Form/styles.js":"9","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/List/List.jsx":"10","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/List/styles.js":"11","/home/peeyushdangi/Desktop/expense_tracker/src/context/context.js":"12","/home/peeyushdangi/Desktop/expense_tracker/src/context/contextReducer.js":"13","/home/peeyushdangi/Desktop/expense_tracker/src/constants/categories.js":"14","/home/peeyushdangi/Desktop/expense_tracker/src/utils/formatDate.js":"15","/home/peeyushdangi/Desktop/expense_tracker/src/useTransactions.js":"16","/home/peeyushdangi/Desktop/expense_tracker/src/components/Snackbar/Snackbar.js":"17","/home/peeyushdangi/Desktop/expense_tracker/src/components/Snackbar/styles.js":"18","/home/peeyushdangi/Desktop/expense_tracker/src/components/InfoCard.jsx":"19"},{"size":414,"mtime":1610484695251,"results":"20","hashOfConfig":"21"},{"size":1691,"mtime":1610560308824,"results":"22","hashOfConfig":"21"},{"size":712,"mtime":1610470845270,"results":"23","hashOfConfig":"21"},{"size":229,"mtime":1610313308557,"results":"24","hashOfConfig":"21"},{"size":551,"mtime":1610559298572,"results":"25","hashOfConfig":"21"},{"size":1277,"mtime":1610560371234,"results":"26","hashOfConfig":"21"},{"size":489,"mtime":1610549938285,"results":"27","hashOfConfig":"21"},{"size":4791,"mtime":1610561440201,"results":"28","hashOfConfig":"21"},{"size":234,"mtime":1610361718065,"results":"29","hashOfConfig":"21"},{"size":1647,"mtime":1610451646804,"results":"30","hashOfConfig":"21"},{"size":365,"mtime":1610401594326,"results":"31","hashOfConfig":"21"},{"size":1019,"mtime":1610549488859,"results":"32","hashOfConfig":"21"},{"size":584,"mtime":1610548413280,"results":"33","hashOfConfig":"21"},{"size":1659,"mtime":1610451851668,"results":"34","hashOfConfig":"21"},{"size":342,"mtime":1610471328550,"results":"35","hashOfConfig":"21"},{"size":1074,"mtime":1610470747067,"results":"36","hashOfConfig":"21"},{"size":767,"mtime":1610556234939,"results":"37","hashOfConfig":"21"},{"size":195,"mtime":1610555215903,"results":"38","hashOfConfig":"21"},{"size":440,"mtime":1610558612557,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1x9dxc8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/peeyushdangi/Desktop/expense_tracker/src/index.js",[],["81","82"],"/home/peeyushdangi/Desktop/expense_tracker/src/App.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Details/Details.jsx",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Details/styles.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/styles.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Main.jsx",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/styles.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Form/Form.jsx",["83"],"import React, { useState, useContext, useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useSpeechContext } from '@speechly/react-client';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport useStyles from './styles';\n\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date()),\n};\n\nconst  Form= () => {\n  const classes = useStyles();\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = React.useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: 'Income' });\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: 'Expense' });\n    }\n\n    setOpen(true);\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === 'add_expense') {\n        setFormData({ ...formData, type: 'Expense' });\n      } else if (segment.intent.intent === 'add_income') {\n        setFormData({ ...formData, type: 'Income' });\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n        return createTransaction();\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((s) => {\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n\n        switch (s.type) {\n          case 'amount':\n            setFormData({ ...formData, amount: s.value });\n            break;\n          case 'category':\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: 'Income', category });\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: 'Expense', category });\n            }\n            break;\n          case 'date':\n            setFormData({ ...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Snackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n        {segment ? (\n        <div className=\"segment\">\n          {segment.words.map((w) => w.value).join(\" \")}\n        </div>\n      ) : null}\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\n      </Grid>\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n    </Grid>\n  );\n};\nexport default Form;","/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/Form/styles.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/List/List.jsx",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Main/List/styles.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/context/context.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/context/contextReducer.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/constants/categories.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/utils/formatDate.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/useTransactions.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Snackbar/Snackbar.js",[],"/home/peeyushdangi/Desktop/expense_tracker/src/components/Snackbar/styles.js",[],["84","85"],"/home/peeyushdangi/Desktop/expense_tracker/src/components/InfoCard.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":78,"column":6,"nodeType":"92","endLine":78,"endColumn":15,"suggestions":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["98"],["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"101","text":"102"},[2915,2924],"[createTransaction, formData, segment]"]